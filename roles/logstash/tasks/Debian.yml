---

- name: Ensure elasticsearch apt signing key is installed
  apt_key: url={{ url_gpg_key }} state=present

- name: Ensure logstash and elasticsearch repository is installed
  apt_repository: repo="deb {{ item }} stable main" update_cache=yes
  with_items:
    - "{{ url_logstash_pkg }}"
    - "{{ url_elasticsearch_pkg }}"

- name: Ensure openjdk, logstash, redis-server, elasticsearch, apache2 and python-passlib are installed
  apt: pkg={{ item }} state=installed
  with_items:
    - openjdk-7-jre
    - logstash
    - redis-server
    - elasticsearch
    - apache2
    - python-passlib

- name: Ensure config files for logstash and elasticsearch are in place
  copy: src={{ item.src }}
        dest={{ item.dst }}
        owner=root group=root mode=0644
  notify:
    - restart logstash
    - restart redis-server
    - restart elasticsearch
  with_items:
    - {name: 'logstash', src: 'central.conf', dst: '/etc/logstash/conf.d/central.conf'}
    - {name: 'redis-server', src: 'redis.conf', dst: '/etc/redis/redis.conf'}
    - {name: 'elasticsearch', src: 'elasticsearch.yml', dst: '/etc/elasticsearch/elasticsearch.yml'}

- name: Ensure logstash, redis-server, elasticsearch and apache2 boots on startup
  command: update-rc.d {{ item }} defaults
  notify:
    - restart logstash
    - restart redis-server
    - restart elasticsearch
    - restart apache2
  with_items: 
    - logstash
    - redis-server
    - elasticsearch
    - apache2


- name: Disable default vhost
  command: /usr/sbin/a2dissite default
  notify:
    - restart apache2

- name: Create vhost directory
  file: path={{ kibana_doc_root }} owner=www-data group=www-data mode=0755 state=directory

- name: Create apache vhost config from template
  template: src=vhost.j2 dest=/etc/apache2/sites-available/kibana owner=root group=root mode=0644

- name: Fetch kibana source
  get_url: url={{ kibana_url }}{{ kibana_version }}.tar.gz dest=/tmp/{{ kibana_version }}.tar.gz

- name: Unarchive source to vhost
  command: tar -C {{ kibana_doc_root }} -zxf /tmp/{{ kibana_version }}.tar.gz

- name: debug variables
  debug: msg=" variable concatication = {{ kibana_doc_root }}/{{ kibana_version }}/{{ kibana_config_file }}"

- name: Replace the URI of the elasticSearch service in config.js on Kibana server
  lineinfile: >
    dest={{ kibana_doc_root }}/{{ kibana_version }}/{{ kibana_config_file }}
    regexp='(elasticsearch.* \"http.*)$'
    state=present
    line='elasticsearch: "{{ elasticsearch_URL }}:{{ elasticsearch_port }}",'

- name: Set Permissions
  command: /bin/chown -R www-data.www-data {{ kibana_doc_root }}/{{ kibana_version }}

- name: Create htaccess
  template: src=htaccess.j2 dest={{ kibana_doc_root }}/{{ kibana_version }}/.htaccess owner=www-data group=www-data mode=0644

- name: Create htpasswd user
  htpasswd: path=/etc/apache2/kibana-htpasswd name="{{ kibana_user }}" password="{{ kibana_pass }}" owner=root group=www-data mode=0640

- name: Activate vhost and restart apache2
  command: a2ensite kibana
  notify:
   - restart apache2